name: Test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: Build checks
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
    - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
    - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install
      run: npm ci
    - name: Build & Verify
      run: npm run build && git diff --exit-code

  unit:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
    - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
    - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install
      run: npm ci
    - name: Test
      run: npm test
  
  integration:
    name: Integration test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
    - name: Use Action
      uses: ./
    - name: Validate
      run: tflint -v
  
  integration-versions:
    name: 'Integration test (tflint_version: ${{ matrix.tflint_version }})'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tflint_version: ['v0.24.1', latest]
    
    steps:
    - name: Checkout
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
    - name: Use Action
      uses: ./
      with:
        tflint_version: ${{ matrix.tflint_version }}
    - name: Validate
      if: matrix.tflint_version != 'latest'
      run: |-
        version='${{ matrix.tflint_version }}'
        tflint -v | grep ${version:1}
    - name: Validate
      if: matrix.tflint_version == 'latest'
      run: tflint -v

  integration-matchers:
    name: 'Integration test (tflint_version: ${{ matrix.tflint_version }})'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tflint_version: ['v0.26.0', latest]

    steps:
    - name: Checkout
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
    - name: Use Action
      uses: ./
      with:
        tflint_version: ${{ matrix.tflint_version }}
    - name: Run
      run: tflint -f compact --force
